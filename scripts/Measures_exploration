--=======================================================================--
--MEASURES EXPLORATION
--=======================================================================--



-- FIND THE TOTAL SALES
select sum(total_sales)total_sales from gold.fact_sales


-- FIND HOW MANY ITEMS ARE SOLD
select sum(sls_quantity)total_quantity from gold.fact_sales


-- FIND THE AVERAGE SELLING PRICE
select avg(sls_price) avg_selling_price from gold.fact_sales


-- FIND THE TOTAL NUMBER OF ORDERS
select count(order_number) total_orders from gold.fact_sales  --this will give all the orders
select count(distinct order_number) total_orders from gold.fact_sales  -- this will show ditinct orders from distinct customers


-- FIND THE TOTAL NUMBER OF PRODUCTS
select count(product_key) total_PRODUCTS from gold.dim_products
select count(distinct product_key) total_PRODUCTS from gold.dim_products


-- FIND THE TOTAL NUMBER OF CUSTOMERS
select count(cust_key) from gold.dim_customers

-- FIND THE TOTAL NUMBER OF CUSTOMERS THAT HAS PLACED AN ORDER
select count (distinct cust_key) from gold.fact_sales



-- GENERATE A REPORT ON THIS ALL BUSINESS PROBLEMS

select 'total_sales' as measures ,sum(total_sales) as measure_values from gold.fact_sales
union all
select 'total_quantity' as measures ,sum(sls_quantity) as measure_values from gold.fact_sales
union all
select 'avg_selling_price' as measures ,avg(sls_price) as measure_values from gold.fact_sales
union all
select 'total_orders' as measures ,count(distinct order_number) as measure_values from gold.fact_sales 
union all
select 'total_PRODUCTS' as measures ,count(distinct product_key) as measure_values from gold.dim_products
union all
select 'total_num_of_customers' as measures ,count(cust_key) as measure_values from gold.dim_customers
union all
select 'customers_who_placed_orders' as measures ,count (distinct cust_key) as measure_values from gold.fact_sales





--=======================================================================--
--MAGNITUDE EXPLORATION
--=======================================================================--


-- FIND TOTAL CUSTOMERS BY COUNTRIES
select 
		country, 
		count(cust_key)as total_customers
from gold.dim_customers
group by country
order by count(cust_key) desc


-- FIND TOTAL CUSTOMERS BY GENDER
select
		gender,
		count(cust_key) as customers
from gold.dim_customers
group by gender
order by count(cust_key) desc


-- FIND TOTAL PRODUCTS BY CATEGORIES
select
		prd_categories,		
		count(product_key) total_products
from gold.dim_products
group by prd_categories
order by count(product_key) desc


-- WHAT IS THE AVERAGE COSTS IN EACH CATEGORIES
select 
		prd_categories,
		avg(prd_cost) as avg_cost
from gold.dim_products
group by prd_categories
order by avg_cost desc


-- FIND TOTAL REVENUE IS GENERATED for each category
select 
	  prd.prd_categories,
	  sum(fs.total_sales) total_revenue
from gold.fact_sales fs
left join gold.dim_products prd 
on fs.product_key = prd.product_key
group by prd.prd_categories
order by total_revenue desc


-- WHAT IS THE REVENUE GENERATED BY EACH CUSTOMERS
select
		c.cust_key,
		c.first_name,
		c.last_name,
		sum(s.total_sales) as revenue
from gold.fact_sales s
left join gold.dim_customers c
on c.cust_key = s.cust_key
group by 
		c.cust_key,
		c.first_name,
		c.last_name
order by revenue desc



-- WHAT IS THE DISTRIBUTON OF SOLD ITEMS ACROSS COUNTRIES
select 
		country,
		count (sls_quantity) as sold_items
from gold.dim_customers c
left join gold.fact_sales s
on s.cust_key = c.cust_key
group by country 
order by sold_items desc



--=======================================================================--
--RANKING ANALYSIS
--=======================================================================--

-- which 5 products generates the highest revenue
select top 5
		p.prd_subcategories,
		sum(s.total_sales) highest_revenue
from gold.fact_sales s
left join gold.dim_products p
on p.product_key = s.product_key
group by p.prd_subcategories
order by highest_revenue desc

-- which 5 products generates the highest revenue (using window function)---

select * from 
(
		select 
				p.prd_name,
				sum(s.total_sales) as highest_revenue,
				dense_rank ()over(order by sum(s.total_sales)desc) as rank_products
		from gold.fact_sales s
		left join gold.dim_products p
		on p.product_key = s.product_key
		group by p.prd_name
)t
where rank_products<=5
